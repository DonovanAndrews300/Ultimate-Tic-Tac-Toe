[{"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/index.js":"1","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Game.js":"2","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/App.js":"3","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Square.js":"4","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Board.js":"5"},{"size":434,"mtime":1612368285870,"results":"6","hashOfConfig":"7"},{"size":4208,"mtime":1612748066095,"results":"8","hashOfConfig":"7"},{"size":176,"mtime":1612408264240,"results":"9","hashOfConfig":"7"},{"size":1059,"mtime":1612366632287,"results":"10","hashOfConfig":"7"},{"size":1273,"mtime":1612417405212,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"15hzspr",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"14"},"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/index.js",[],["28","29"],"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Game.js",["30","31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board'\nimport ReactHowler from 'react-howler'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { faVolumeUp, faVolumeMute} from '@fortawesome/free-solid-svg-icons'\n\n\nclass Game extends React.Component {\n  \n  constructor() {\n    super()\n    this.state = {\n      themeOn:true,\n      game: [ '', '', '', '', '', '', '', '', '' ],\n      currentPlayer :null,\n      gameActive:true\n  };\n    this.handleGameStateUpdate = this.handleGameStateUpdate.bind(this)\n    this.socket = new WebSocket('ws://localhost:4000');\n    \n\n   \n}\n\ncomponentDidMount(){\n this.initWebSocket()\n \n}\n\n  initWebSocket(){\n    this.socket.addEventListener('open', () =>  {\n      console.log(\"connected to websockt server\")\n  \n    this.socket.addEventListener('message', (event) => {\n      const parsedData = JSON.parse(event.data)\n     if(parsedData != this.state){\n       const { game, currentPlayer,  gameActive} = parsedData\n      console.log(\"incoming message is \", game,currentPlayer, gameActive)\n      this.setState({\n        game,\n        gameActive\n      })\n     }\n    })\n   \n    })\n  }\n\n  \n\n  \n\n  /**\n   * Updates the gamestate array and the html grid\n   * @param  {function} clickedCellIndex\n   */\n  handleGameStateUpdate(cellIndex,currentPlayer) {\n    \n    //sets the playerTurn of who used undo\n    if(currentPlayer === ''){\n      if(this.state.currentPlayer === 'X' ){\n        this.setState({\n        currentPlayer:'O',\n        })\n      }\n      if(this.state.currentPlayer === 'O' ){\n        this.setState({\n        currentPlayer:'X',\n        })\n      }\n    }\n\n    else{\n      this.setState({\n        currentPlayer:currentPlayer,\n      })\n    }\n    \n    this.state.game[cellIndex] = currentPlayer\n    \n    this.handleResult()\n\n}\n\n\n /**\n   * Displays winner of the game\n */\nshowResults(){\n  if(!this.state.gameActive){\n    if(!this.state.game.includes('')){\n      return \"Its a draw!\"\n    }\n  return this.state.currentPlayer === \"O\" ? \"Winner is O\": \"Winner is X\"\n  }\n}\n\n   /**\n   * Handles result validation\n */\n  handleResult() {\n    let roundWon = false;\n    const roundDraw = !this.state.game.includes('');\n    const winConditions = [\n        [ 0, 1, 2 ],\n        [ 3, 4, 5 ],\n        [ 6, 7, 8 ],\n        [ 0, 3, 6 ],\n        [ 1, 4, 7 ],\n        [ 2, 5, 8 ],\n        [ 0, 4, 8 ],\n        [ 2, 4, 6 ]\n    ];\n\n    winConditions.forEach(winCondition => {\n        const a = this.state.game[winCondition[0]];\n        const b = this.state.game[winCondition[1]];\n        const c = this.state.game[winCondition[2]];\n\n\n        if (a === b && b === c) {\n\n            if (a !== '' || b !== '' || c !== '') {\n                roundWon = true;\n\n            }\n        }\n    });\n\n\n    if (roundWon || roundDraw) {\n        this.setState({gameActive:false},() => this.socket.send(JSON.stringify(this.state)));\n      return\n    }\n\n    this.socket.send(JSON.stringify(this.state));\n    return\n}\n\n  /**\n   * Restarts the game\n */\n  handleRestartGame() {\n    this.setState({\n      game: [ '', '', '', '', '', '', '', '', '' ],\n      currentPlayer :null,\n      gameActive:true\n  })\n}\n\n  handleGameTheme(){\n    if(this.state.themeOn === true){\n      this.setState({themeOn:false})\n      return\n    }\n    else{\n      this.setState({themeOn:true})\n      return\n    }\n        \n  }\n  \n\n\n  render() {\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board gameState={this.state} updateGameState={this.handleGameStateUpdate}/>\n        </div>\n        <div className=\"game-info\">\n\n        <ReactHowler\n        src={['themesong.mp3']}\n        playing={this.state.themeOn}\n        loop={true}\n      />\n          <div>{this.showResults()}</div>\n          <ol><button onClick={() => this.handleRestartGame()}>{\"Restart\"}</button></ol>\n          {\n            this.state.themeOn ?\n            <ol><button onClick={() => this.handleGameTheme() }><FontAwesomeIcon icon={faVolumeUp}/></button>\n            </ol>\n            :\n            <ol><button onClick={() => this.handleGameTheme() }><FontAwesomeIcon icon={faVolumeMute}/></button></ol>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game\n","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/App.js",["33"],"import logo from './logo.svg';\n\nimport Game from './components/Game'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n",["34","35"],"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Square.js",["36","37","38"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nexport default class Square extends React.Component {\n\n    constructor(){\n      super()\n    }\n  \n    \n  \n    changePlayerSquare(){\n      const filledSquare = this.props.gameState.game[this.props.cellIndex]\n      const {currentPlayer} =  this.props.gameState\n  \n      if(filledSquare===''){\n        if(currentPlayer === 'X'){\n      this.props.updateGameState(this.props.cellIndex, 'O' )\n    }\n      if(currentPlayer === null || currentPlayer === 'O'){\n    this.props.updateGameState(this.props.cellIndex, 'X' )\n  }\n   }\n   if(filledSquare!=''){\n  this.props.updateGameState(this.props.cellIndex, '' )\n    }\n    }\n  \n    disableButton(){\n      return this.props.gameState.gameActive ? false : true\n    }\n  \n  \n    render() {\n      const disable = this.disableButton()\n      return (\n        <button ref={this.cellContent} disabled ={disable} onClick={() => this.changePlayerSquare()} className=\"square\">\n          {this.props.gameState.game[this.props.cellIndex]}\n        </button>\n      );\n    }\n  }","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Board.js",["39","40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Square from './Square'\n\nexport default class Board extends React.Component {\n    constructor(){\n      super()\n    }\n  \n    componentDidMount(){\n      this.setState({game:this.props.updateGameState})\n    }\n    renderSquare(cellIndex) {\n      return <Square cellIndex={cellIndex} gameState={this.props.gameState} updateGameState={this.props.updateGameState} />;\n    }\n  \n  \n  \n    render() {\n   \n      const boardRow = [0,1,2]\n      const boardRow2 =  [3,4,5]\n      const boardRow3 = [6,7,8]\n  \n      return (\n        <div className={\"board\"}>\n          <div className=\"status\">{'Tic-Tac-Toe Ultimate Showdown!'}</div>\n          <div className=\"board-row\">\n              {\n                //Update the grid with the current player index\n                  boardRow.map((cellIndex) => this.renderSquare(cellIndex))\n              }\n          </div>\n          <div className=\"board-row\">\n              {\n                  boardRow2.map((cellIndex) => this.renderSquare(cellIndex))\n              }\n          </div>\n          <div className=\"board-row\">\n              {\n                  boardRow3.map((cellIndex) => this.renderSquare(cellIndex))\n              }\n          </div>\n        </div>\n      );\n    }\n  }",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":38,"column":20,"nodeType":"51","messageId":"52","endLine":38,"endColumn":22},{"ruleId":"53","severity":1,"message":"54","line":81,"column":5,"nodeType":"55","endLine":81,"endColumn":20},{"ruleId":"45","severity":1,"message":"56","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"41","replacedBy":"57"},{"ruleId":"43","replacedBy":"58"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":5,"column":5,"nodeType":"61","messageId":"62","endLine":7,"endColumn":6},{"ruleId":"49","severity":1,"message":"50","line":23,"column":19,"nodeType":"51","messageId":"52","endLine":23,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":2,"column":8,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"59","severity":1,"message":"60","line":6,"column":5,"nodeType":"61","messageId":"62","endLine":8,"endColumn":6},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'logo' is defined but never used.",["63"],["64"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]