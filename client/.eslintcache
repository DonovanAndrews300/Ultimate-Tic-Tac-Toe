[{"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/App.js":"1","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/index.js":"2","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Game.js":"3","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Square.js":"4","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Board.js":"5"},{"size":176,"mtime":1612408264240,"results":"6","hashOfConfig":"7"},{"size":434,"mtime":1612368285870,"results":"8","hashOfConfig":"7"},{"size":2779,"mtime":1612368095391,"results":"9","hashOfConfig":"7"},{"size":1059,"mtime":1612366632287,"results":"10","hashOfConfig":"7"},{"size":1273,"mtime":1612417405212,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15hzspr",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/App.js",["24"],"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/index.js",[],"/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Game.js",["25","26"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Board from './Board'\n\n\nclass Game extends React.Component {\n  \n  constructor() {\n    super()\n    this.state = {\n      game: [ '', '', '', '', '', '', '', '', '' ],\n      currentPlayer :null,\n      gameActive:true\n  };\n    this.handleGameStateUpdate = this.handleGameStateUpdate.bind(this)\n\n    //this.initGameState();\n}\n\n  \n\n  /**\n   * Updates the gamestate array and the html grid\n   * @param  {function} clickedCellIndex\n   */\n  handleGameStateUpdate(cellIndex,currentPlayer) {\n    \n    //sets the playerTurn of who used undo\n    if(currentPlayer === ''){\n      if(this.state.currentPlayer === 'X' ){\n        this.setState({\n        currentPlayer:'O',\n        })\n      }\n      if(this.state.currentPlayer === 'O' ){\n        this.setState({\n        currentPlayer:'X',\n        })\n      }\n    }\n\n    else{\n      this.setState({\n        currentPlayer:currentPlayer,\n      })\n    }\n    \n    this.state.game[cellIndex] = currentPlayer\n    this.handleResult()\n\n}\n\n\n /**\n   * Displays winner of the game\n */\nshowResults(){\n  if(!this.state.gameActive){\n    if(!this.state.game.includes('')){\n      return \"Its a draw!\"\n    }\n  return this.state.currentPlayer === \"O\" ? \"Winner is O\": \"Winner is X\"\n  }\n}\n\n   /**\n   * Handles result validation\n */\n  handleResult() {\n    let roundWon = false;\n    const roundDraw = !this.state.game.includes('');\n    const winConditions = [\n        [ 0, 1, 2 ],\n        [ 3, 4, 5 ],\n        [ 6, 7, 8 ],\n        [ 0, 3, 6 ],\n        [ 1, 4, 7 ],\n        [ 2, 5, 8 ],\n        [ 0, 4, 8 ],\n        [ 2, 4, 6 ]\n    ];\n\n    winConditions.forEach(winCondition => {\n        const a = this.state.game[winCondition[0]];\n        const b = this.state.game[winCondition[1]];\n        const c = this.state.game[winCondition[2]];\n\n\n        if (a === b && b === c) {\n\n            if (a !== '' || b !== '' || c !== '') {\n                roundWon = true;\n\n            }\n        }\n    });\n\n\n    if (roundWon) {\n        this.setState({gameActive:false});\n      return\n    }\n\n\n    if (roundDraw) {\n      this.setState({gameActive:false});\n      return\n    }\n\n    return\n}\n\n  /**\n   * Restarts the game\n */\n  handleRestartGame() {\n    this.setState({\n      game: [ '', '', '', '', '', '', '', '', '' ],\n      currentPlayer :null,\n      gameActive:true\n  })\n\n}\n  \n\n\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board gameState={this.state} updateGameState={this.handleGameStateUpdate}/>\n        </div>\n        <div className=\"game-info\">\n      \n          <div>{this.showResults()}\n          </div>\n          <ol><button onClick={() => this.handleRestartGame()}>{\"Restart\"}</button></ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game\n","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Square.js",["27","28","29"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nexport default class Square extends React.Component {\n\n    constructor(){\n      super()\n    }\n  \n    \n  \n    changePlayerSquare(){\n      const filledSquare = this.props.gameState.game[this.props.cellIndex]\n      const {currentPlayer} =  this.props.gameState\n  \n      if(filledSquare===''){\n        if(currentPlayer === 'X'){\n      this.props.updateGameState(this.props.cellIndex, 'O' )\n    }\n      if(currentPlayer === null || currentPlayer === 'O'){\n    this.props.updateGameState(this.props.cellIndex, 'X' )\n  }\n   }\n   if(filledSquare!=''){\n  this.props.updateGameState(this.props.cellIndex, '' )\n    }\n    }\n  \n    disableButton(){\n      return this.props.gameState.gameActive ? false : true\n    }\n  \n  \n    render() {\n      const disable = this.disableButton()\n      return (\n        <button ref={this.cellContent} disabled ={disable} onClick={() => this.changePlayerSquare()} className=\"square\">\n          {this.props.gameState.game[this.props.cellIndex]}\n        </button>\n      );\n    }\n  }","/home/donovan/Documents/Web_Projects/React_Projects/Tic_Tac_Toe_Nutshell/client/src/components/Board.js",["30","31"],{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":16},{"ruleId":"37","severity":1,"message":"38","line":48,"column":5,"nodeType":"39","endLine":48,"endColumn":20},{"ruleId":"32","severity":1,"message":"36","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":5,"column":5,"nodeType":"42","messageId":"43","endLine":7,"endColumn":6},{"ruleId":"44","severity":1,"message":"45","line":23,"column":19,"nodeType":"46","messageId":"47","endLine":23,"endColumn":21},{"ruleId":"32","severity":1,"message":"36","line":2,"column":8,"nodeType":"34","messageId":"35","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":6,"column":5,"nodeType":"42","messageId":"43","endLine":8,"endColumn":6},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]